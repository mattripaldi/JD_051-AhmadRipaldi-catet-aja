// Example usage of the reusable DrawerModal component
import { useState } from 'react';
import DrawerModal from './drawer-modal';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';

// Example 1: Simple confirmation modal
export function ConfirmationModal({ title = "Confirm Action", message = "Are you sure?" }) {
    const renderFooter = ({ close }) => (
        <>
            <Button
                className="w-full h-12 text-base font-medium bg-red-600 hover:bg-red-700 text-white"
                onClick={() => {
                    // Handle confirmation
                    console.log('Confirmed');
                    close();
                }}
            >
                Confirm
            </Button>
            <Button 
                variant="outline" 
                className="w-full h-12 text-base font-medium"
                onClick={() => close()}
            >
                Cancel
            </Button>
        </>
    );

    return (
        <DrawerModal
            title={title}
            description={message}
            footer={renderFooter}
        >
            <div className="py-4">
                <p className="text-gray-600">This action cannot be undone.</p>
            </div>
        </DrawerModal>
    );
}

// Example 2: Information modal (no footer)
export function InfoModal({ title = "Information", content }) {
    return (
        <DrawerModal
            title={title}
            showCloseButton={true}
        >
            <div className="py-4">
                {content}
            </div>
        </DrawerModal>
    );
}

// Example 3: Custom styled modal
export function CustomModal({ children }) {
    return (
        <DrawerModal
            title="Custom Modal"
            className="border-blue-200"
            maxWidth="max-w-[600px]"
            height="min-h-[70vh] max-h-[90vh]"
            direction="bottom"
            showCloseButton={false} // Custom close handling
        >
            {children}
        </DrawerModal>
    );
}

// Example 4: Form modal with validation
export function ContactModal() {
    const [formData, setFormData] = useState({
        name: '',
        email: '',
        message: ''
    });

    const handleSubmit = (close) => {
        // Handle form submission
        console.log('Form submitted:', formData);
        close();
    };

    const renderForm = ({ close }) => (
        <form className="space-y-4">
            <div>
                <Label htmlFor="contact-name">Name</Label>
                <Input
                    id="contact-name"
                    value={formData.name}
                    onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}
                    placeholder="Enter your name"
                />
            </div>
            <div>
                <Label htmlFor="contact-email">Email</Label>
                <Input
                    id="contact-email"
                    type="email"
                    value={formData.email}
                    onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}
                    placeholder="Enter your email"
                />
            </div>
            <div>
                <Label htmlFor="contact-message">Message</Label>
                <Input
                    id="contact-message"
                    value={formData.message}
                    onChange={(e) => setFormData(prev => ({ ...prev, message: e.target.value }))}
                    placeholder="Enter your message"
                />
            </div>
        </form>
    );

    const renderFooter = ({ close }) => (
        <>
            <Button
                className="w-full h-12 text-base font-medium bg-blue-600 hover:bg-blue-700 text-white"
                onClick={() => handleSubmit(close)}
            >
                Send Message
            </Button>
            <Button 
                variant="outline" 
                className="w-full h-12 text-base font-medium"
                onClick={() => close()}
            >
                Cancel
            </Button>
        </>
    );

    return (
        <DrawerModal
            title="Contact Us"
            description="Send us a message and we'll get back to you."
            footer={renderFooter}
        >
            {renderForm}
        </DrawerModal>
    );
}
